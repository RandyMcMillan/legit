# This is a basic workflow to help you get started with Actions

name: automate.yml

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    #paths:
    #  - '.github/workflows/automate.yml'
    schedule:
      - cron: "*/3 * * * *"

    branches:       #[ master ]
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - 'master'    # includes master
      - 'main'      # includes main

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  github-workspace:
    name: github-workspace
    runs-on: ubuntu-20.04
    steps:
      - name: Print github workspace
        run: |
          printenv

# Cross Compile 
  ubuntu-20-host:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            brew install node
            ~/.cargo/registry
            ./target
          key: test-cargo-registry
      - name: List
        run: find ./
      - name: Run tests
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain none -y
          source "$HOME/.cargo/env" && rustup default stable
          source "$HOME/.cargo/env" && cargo test --verbose
          #cargo test --verbose
      ## REF: https://githubmemory.com/repo/Gisleburt/cancel-workflow-action
      #- uses: styfle/cancel-workflow-action@0.3.0
      #  with:
      #    access_token: ${{ github.token }}

      - uses: actions/checkout@v2
      - name: cargo b
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain none -y
          source "$HOME/.cargo/env" && rustup default stable
          #cargo test --verbose
          #git init
          #make cargo-build
          source "$HOME/.cargo/env" && cargo b
          source "$HOME/.cargo/env" && cargo install  --path .
      - name: cargo run -h
        run: |
          source "$HOME/.cargo/env" && cargo run -h
      - name: git config
        if: ${{ !env.ACT }}
        run: |
          sudo git config user.name $GITHUB_REPOSITORY_OWNER
          sudo git config user.email $GITHUB_REPOSITORY_OWNER@test-email.com
      - name: touch-time test
        if: ${{ !env.ACT }}
        run: |
          sudo git config user.name $GITHUB_REPOSITORY_OWNER
          sudo git config user.email $GITHUB_REPOSITORY_OWNER@test-email.com
          sudo make touch-time git-add
          sudo git diff
          sudo make git-add
          sudo git diff
          sudo cargo run . -p 000 -m "touch-time test"
      - name: cargo run . -p 0 -m $(date +%s)
        if: ${{ !env.ACT }}
        run: |
          sudo make touch-time
          sudo git diff
          sudo make git-add
          sudo cargo run . -p 0 -m $(date +%s)
          sudo make touch-time
          sudo git diff
          sudo make git-add
          sudo cargo run . -p 00 -m $(date +%s)
          sudo make touch-time
          sudo git diff
          sudo make git-add
          sudo cargo run . -p 000 -m $(date +%s)
          sudo make touch-time
          sudo git diff
          sudo make git-add
          sudo cargo run . -p 0000 -m $(date +%s)
      - name: git log
        if: ${{ !env.ACT }}
        run: |
          git log
